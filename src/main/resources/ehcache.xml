<config
        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
        xmlns='http://www.ehcache.org/v3'
        xmlns:jsr107="http://www.ehcache.org/v3/jsr107"
        xsi:schemaLocation="http://www.ehcache.org/v3 http://www.ehcache.org/schema/ehcache-core.xsd
        http://www.ehcache.org/v3/jsr107 http://www.ehcache.org/schema/ehcache-107-ext-3.0.xsd">

    <service>
        <!-- JMX를 통한 캐시 관리 및 통계 수집 활성화 -->
        <jsr107:defaults enable-management="true" enable-statistics="true"/>
    </service>

    <cache alias="UserCache"><!-- 개별 캐시 설정, 캐시의 고유 이름(alias) 지정 -->
        <key-type>java.lang.Long</key-type><!-- 캐시 키 타입 지정 -->
        <value-type>dev.chiptune.springboot.entity.Users</value-type><!-- 캐시 값 타입 지정 -->

        <expiry>
            <!-- 캐시 항목의 TTL(Time-To-Live), 30분 후 만료 -->
            <ttl unit="minutes">30</ttl>
        </expiry>

        <listeners>
            <listener>
                <!-- 리스너 클래스 위치 -->
                <class>dev.chiptune.springboot.listener.CustomCacheEventListener</class>
                <!-- 비동기 방식 사용, 캐시 동작을 블로킹하지 않고 이벤트를 처리, SYNCHRONOUS와 반대 -->
                <event-firing-mode>ASYNCHRONOUS</event-firing-mode>
                <!-- 이벤트 처리 순서 설정 X, ORDERED와 반대 -->
                <event-ordering-mode>UNORDERED</event-ordering-mode>
                <!-- 리스너가 감지할 이벤트 설정(EVICTED, EXPIRED, REMOVED, CREATED, UPDATED) -->
                <events-to-fire-on>EVICTED</events-to-fire-on>
                <events-to-fire-on>EXPIRED</events-to-fire-on>
                <events-to-fire-on>REMOVED</events-to-fire-on>
                <events-to-fire-on>CREATED</events-to-fire-on>
                <events-to-fire-on>UPDATED</events-to-fire-on>
            </listener>
        </listeners>

        <resources>
            <!-- JVM 힙 메모리에 캐시 저장 -->
            <heap unit="entries">100</heap>
            <!-- off-heap(외부 메모리)에 캐시 저장 -->
            <offheap unit="MB">10</offheap>
        </resources>

    </cache>

</config>
